#include <iostream>
#include <string>
using namespace std;

class Shape
{
public:
    virtual int perim() = 0;  //pure virtual function ("=0")
    virtual double aria() = 0; 
};


class Rectangle : Shape
{
public:
    int len, width;
    int perim()
    {
        return (len + width) * 2;
    }
    double aria()
    {
        return len * width;
    }
};

class Triangle : Shape
{
public:
    int a, b, c; //cele 3 laturi
    int perim()
    {
        return a + b + c;
    }
    double aria()
    {
        int p = perim() / 2;
        return sqrt(p * (p - a) * (p - b) * (p - c));
    }
    double height_c()
    {
        return 2 * aria() / c;  //din scrierea ariei in 2 moduri
    }
};




int main()
{
    
    //Shape square, rectangle, triangle;
    Shape* shape = NULL;
    


    cout << "Pick a shape: " << endl;
    string shapeName;
    getline(cin, shapeName);
    //cin.ignore(80, '\n');
    //getchar(); //'\n'

    while (shapeName != "square" && shapeName != "rectangle" && shapeName != "triangle")
    {
        cout << "ERROR: Enter a valid shape!" << endl;
        cout << "Pick a shape: " << endl;
        getline(cin, shapeName);
    }
    /*
    if (shapeName == "square")
    {
        cout << "Enter size of side" << endl;
        cin >> square.len;
    }*/
    if (shapeName == "rectangle")
    {
        Rectangle* rectangle = new Rectangle();
        cout << "Enter length" << endl;
        cin >> rectangle->len;
        cout << "Enter width" << endl;
        cin >> rectangle->width;
        shape = (Shape*)rectangle;
    }
    else if (shapeName == "triangle")
    {
        Triangle* triangle = new Triangle();
        cout << "Enter first side" << endl;
        cin >> triangle->a;
        cout << "Enter second side" << endl;
        cin >> triangle->b;
        cout << "Enter third side" << endl;
        cin >> triangle->c;
        shape = (Shape*)triangle;
    }


    cin.ignore(80, '\n'); //flush resturi (Enter-ul) din input stream
    cout << "What operation you desire?" << endl;
    string operation;
    getline(cin, operation);

    while (operation != "area" && operation != "perimeter" && operation != "height")
    {
        cout << "ERROR: Enter a valid operation!" << endl;
        cout << "What operation you desire?" << endl;
        getline(cin, operation);
    }

    if (operation == "area")
    {
        cout << "Area is: " << shape->aria() << endl;
    }
    else if (operation == "periemeter")
    {
        cout << "Perimeter is: " << shape->perim() << endl;
    }
    
    //particularizare (cast la obiect concret) - DE EVITAT in designul claselor/programului 
    else if (shapeName == "triangle" && operation == "height")
    {
        Triangle* triangle = (Triangle*)shape;
        cout << "Heigth of the triangle is: " << triangle->height_c() << endl;
    }
  
    delete shape;
}
